{"version":3,"sources":["assets/Click2.mp3","components/frame/index.js","actions/index.js","App.js","constants.js","reducers/index.js","store.js","index.js"],"names":["module","exports","Fetch","handleClick","index","props","changeCurrentState","this","data","status","currentImageIndex","style","display","alignItems","justifyContent","id","crossOrigin","src","playSound","map","elem","key","primitive","position","layout","type","margin","ind","events","click","sound","x","y","z","text","value","name","width","color","Component","connect","state","current","dispatch","App","fetchData","url","fetch","then","response","json","items","itemsFetchDataSuccess","catch","error","console","itemsFetchData","init","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","action","render","document","getElementById"],"mappings":"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","file":"static/js/main.0042f2c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Click2.e4288288.mp3\";","import \"aframe\";\nimport { Entity, Scene } from \"aframe-react\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeCurrentState } from \"../../actions/\";\nimport playSound from \"../../assets/Click2.mp3\";\n\nclass Fetch extends Component {\n  handleClick = index => {\n    this.props.changeCurrentState(index);\n  };\n\n  render() {\n    const { data, status, currentImageIndex } = this.props;\n    if (status === \"loading\")\n      return (\n        <h1 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n          LOADING....\n        </h1>\n      );\n    else if (status === \"error\")\n      return (\n        <h1 style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n          ERROR 404 !!!\n        </h1>\n      );\n    else\n      return (\n        <Scene>\n          <a-assets>\n            <audio id=\"click-sound\" crossOrigin=\"anonymous\" src={playSound}></audio>\n          </a-assets>\n          {data.map((elem, index) => {\n            if (currentImageIndex === index)\n              return (\n                <Entity\n                  key={index}\n                  primitive=\"a-sky\"\n                  position=\"2 2 -3\"\n                  src={\n                    \"https://raw.githubusercontent.com/SiDevesh/PanoGallery/gh-pages/VR/\" +\n                    currentImageIndex +\n                    // \"https://nsharma1396.github.io/data-serve/\" +\n                    // data[currentImageIndex].file +\n                    \".jpg\"\n                  }\n                />\n              );\n            else return null;\n          })}\n          <Entity layout={{ type: \"line\", margin: 1.5 }}>\n            {data.map((elem, ind) => {\n              if (currentImageIndex === ind) {\n                return (\n                  <Entity\n                    key={ind}\n                    primitive=\"a-plane\"\n                    events={{\n                      click: () => {\n                        this.handleClick(ind);\n                      }\n                    }}\n                    sound=\"on: click; src: #click-sound\"\n                    src={\n                      \"https://raw.githubusercontent.com/SiDevesh/PanoGallery/gh-pages/VR/\" +\n                      ind +\n                      \".jpg\"\n                    }\n                    position={{ x: -2 + 1.5 * ind, y: 2.5, z: -3.5 }}\n                  />\n                );\n              } else {\n                return (\n                  <Entity\n                    key={ind}\n                    primitive=\"a-plane\"\n                    events={{\n                      click: () => {\n                        this.handleClick(ind);\n                      }\n                    }}\n                    sound=\"on: click; src: #click-sound\"\n                    src={\n                      \"https://raw.githubusercontent.com/SiDevesh/PanoGallery/gh-pages/VR/\" +\n                      ind +\n                      \".jpg\"\n                    }\n                    position={{ x: -2 + 1.5 * ind, y: 2, z: -4 }}\n                  />\n                );\n              }\n            })}\n            {data.map((elem, ind) => {\n              if (currentImageIndex === ind) {\n                return (\n                  <Entity\n                    text={{ value: elem.name, width: 5, color: \"#0ff\" }}\n                    position=\"2.5 3 -2\"\n                  />\n                );\n              } else {\n                return null;\n              }\n            })}\n            <Entity\n              text={{ value: \"Picture \" + (currentImageIndex + 1) + \": \", width: 5, color: \"#0ff\" }}\n              position=\"1.5 3 -2\"\n            ></Entity>\n          </Entity>\n          <Entity primitive=\"a-camera\">\n            <Entity primitive=\"a-cursor\" color=\"#fff\" />\n          </Entity>\n        </Scene>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    status: state.status,\n    currentImageIndex: state.current\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentState: index => dispatch(changeCurrentState(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Fetch);\n","function itemsHasErrored() {\n  return {\n    type: \"ERROR\"\n  };\n}\n\nfunction itemsIsLoading() {\n  return {\n    type: \"LOADING\"\n  };\n}\n\nfunction itemsFetchDataSuccess(items) {\n  return {\n    type: \"SUCCESS\",\n    items: items\n  };\n}\n\nexport function itemsFetchData(url) {\n  return dispatch => {\n    dispatch(itemsIsLoading());\n\n    fetch(url)\n      .then(response => response.json())\n      .then(items => dispatch(itemsFetchDataSuccess(items)))\n      .catch(error => {\n        console.error(error);\n        dispatch(itemsHasErrored());\n      });\n  };\n}\n\nexport function changeCurrentState(index) {\n  return {\n    type: \"CHANGE_CURRENT\",\n    index\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { URL } from \"./constants\";\nimport Frame from \"./components/frame/\";\nimport { itemsFetchData } from \"./actions/\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchData(URL);\n  }\n\n  render() {\n    return (\n      <div>\n        <Frame />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: url => dispatch(itemsFetchData(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const LOADING = \"LOADING\";\nexport const SUCCESS = \"SUCCESS\";\nexport const ERROR = \"ERROR\";\nexport const URL = \"https://nsharma1396.github.io/data-serve/panodata.json\";\nexport const CHANGE_CURRENT = \"CHANGE_CURRENT\";\n","import { LOADING, SUCCESS, ERROR, CHANGE_CURRENT } from \"../constants\";\n\nconst init = {\n  data: [],\n  status: \"loadState\",\n  current: 0\n};\n\nexport default (state = init, action) => {\n  switch (action.type) {\n    case LOADING:\n      return { ...state, status: \"loading\" };\n    case SUCCESS:\n      return { ...state, status: \"success\", data: action.items };\n    case ERROR:\n      return { ...state, status: \"error\" };\n    case CHANGE_CURRENT:\n      return { ...state, current: action.index };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}